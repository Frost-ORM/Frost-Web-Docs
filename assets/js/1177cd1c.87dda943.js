"use strict";(self.webpackChunkfrost_web_doc=self.webpackChunkfrost_web_doc||[]).push([[2310],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(a),d=r,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||i;return a?n.createElement(f,o(o({ref:t},p),{},{components:a})):n.createElement(f,o({ref:t},p))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7940:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var n=a(7462),r=(a(7294),a(3905));const i={sidebar_position:1,description:"Defining the functions for (de)serializing nested data"},o="Serialization",l={unversionedId:"docs/extra/serialization",id:"version-1.0.3/docs/extra/serialization",title:"Serialization",description:"Defining the functions for (de)serializing nested data",source:"@site/versioned_docs/version-1.0.3/docs/extra/serialization.mdx",sourceDirName:"docs/extra",slug:"/docs/extra/serialization",permalink:"/frost-web-docs/1.0.3/docs/extra/serialization",draft:!1,tags:[],version:"1.0.3",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Defining the functions for (de)serializing nested data"},sidebar:"tutorialSidebar",previous:{title:"Extra",permalink:"/frost-web-docs/1.0.3/category/extra"},next:{title:"Excluding Data",permalink:"/frost-web-docs/1.0.3/docs/extra/exclude"}},s={},u=[{value:"Example: Date Serialization using Moment.js",id:"example-date-serialization-using-momentjs",level:2},{value:"Defining a custom Serializer",id:"defining-a-custom-serializer",level:2}],p={toc:u};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"serialization"},"Serialization"),(0,r.kt)("p",null,"If you have nested data that requires (de)serialization when pulled/pushed to the database, then you can use ",(0,r.kt)("a",{parentName:"p",href:"../../api/decorators/Serialize"},"Serialize")," Decorator."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The Decorator takes an argument of the type ",(0,r.kt)("a",{parentName:"p",href:"../../api/types/SerializeOptions"},"SerializeOptions"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"allowNullCall"),": an ",(0,r.kt)("inlineCode",{parentName:"li"},"optional boolean")," that decides whether the serialization will occur even if the data is null or undefined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"serialize"),": (Type: ",(0,r.kt)("a",{parentName:"li",href:"../../api/types/Serializer"},"Serializer"),")",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"It's a function with two arguments that returns the serialized data (should be any JSON value ","[ boolean, string, number, array, object, null]",")."),(0,r.kt)("li",{parentName:"ul"},"The arguments are:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The current value of the property to be serialized"),(0,r.kt)("li",{parentName:"ul"},"The current object instance (incase the serialization depends on other properties)"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"deserialize"),": (Type: ",(0,r.kt)("a",{parentName:"li",href:"../../api/types/Deserializer"},"Deserializer"),")",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"It's a function with two arguments that returns the deserialized data to be assigned to the property in the current object instance"),(0,r.kt)("li",{parentName:"ul"},"The arguments are:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The value of the property from the database (will be any JSON value ","[ boolean, string, number, array, object, null (if allowNullCall is true)]",")"),(0,r.kt)("li",{parentName:"ul"},"The whole data object node from the database (incase the deserialization depends on other properties)."))))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The Decorator takes two generic types, this allows for type safety when checking the (de)serialize functions:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T")," : The Type of the current class."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"P")," : The Type of the current property that the Serialize Decorator is used on.")))),(0,r.kt)("h2",{id:"example-date-serialization-using-momentjs"},"Example: Date Serialization using Moment.js"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Frost provides a ",(0,r.kt)("inlineCode",{parentName:"p"},"DateSerializer")," so you don't have to define your own. It serializes the date using Date API in Javascript, so the date is serialized to ISO string in the database.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import moment from "moment"\n\n@FrostEntity({collectionPath:"/users"})\nclass User extends FrostObject<User>{\n    id?:string\n    name!:string\n    userType!: "Customer" | "Admin"\n\n    @Serialize<User,Date>(\n        {\n            serialize:(value) => moment(value).format("YYYY-MM-DD"),\n            deserialize:(value) => moment(value,"YYYY-MM-DD").toDate()\n        }\n    )\n    birthday?:Date\n\n}\n')),(0,r.kt)("h2",{id:"defining-a-custom-serializer"},"Defining a custom Serializer"),(0,r.kt)("p",null,"You Can define your own serializer once and use it in multiple places, just as in the following examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import moment from "moment"\n\nexport const MomentDateSerializer = <T>()=> (\n    Serialize<T,Date>(\n        {\n            serialize:(value) => moment(value).format("YYYY-MM-DD"),\n            deserialize:(value) => moment(value,"YYYY-MM-DD").toDate()\n        }\n    )\n)\n\nexport const MomentDateSerializerWithNull = <T>(default:Date = new Date())=> (\n    Serialize<T,Date>(\n        {\n            serialize:(value) => moment(value ?? default).format("YYYY-MM-DD"),\n            deserialize:(value) => moment(value ?? default,"YYYY-MM-DD").toDate(),\n            allowNullCall:true\n        }\n    )\n)\n\n')))}c.isMDXComponent=!0}}]);