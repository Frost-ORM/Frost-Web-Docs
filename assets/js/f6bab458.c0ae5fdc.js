"use strict";(self.webpackChunkfrost_web_doc=self.webpackChunkfrost_web_doc||[]).push([[4300],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(a),m=r,f=c["".concat(l,".").concat(m)]||c[m]||u[m]||o;return a?n.createElement(f,i(i({ref:t},d),{},{components:a})):n.createElement(f,i({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},7150:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:5},i="Multiple Location Write",s={unversionedId:"docs/operations/multiple-location-write",id:"version-2.0.0/docs/operations/multiple-location-write",title:"Multiple Location Write",description:"- For Every function in FrostDelegate that modifies the database (add, update, delete) we have an equivalent getMap function.",source:"@site/versioned_docs/version-2.0.0/docs/operations/multiple-location-write.md",sourceDirName:"docs/operations",slug:"/docs/operations/multiple-location-write",permalink:"/frost-web-docs/docs/operations/multiple-location-write",draft:!1,tags:[],version:"2.0.0",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Delete",permalink:"/frost-web-docs/docs/operations/delete"},next:{title:"Extra",permalink:"/frost-web-docs/category/extra"}},l={},p=[{value:"Overcoming Limitations",id:"overcoming-limitations",level:2}],d={toc:p};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"multiple-location-write"},"Multiple Location Write"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For Every function in ",(0,r.kt)("a",{parentName:"li",href:"../../api/classes/FrostDelegate"},"FrostDelegate")," that modifies the database (",(0,r.kt)("a",{parentName:"li",href:"../../api/classes/FrostDelegate#add"},"add"),", ",(0,r.kt)("a",{parentName:"li",href:"../../api/classes/FrostDelegate#update"},"update"),", ",(0,r.kt)("a",{parentName:"li",href:"../../api/classes/FrostDelegate#delete"},"delete"),") we have an equivalent ",(0,r.kt)("inlineCode",{parentName:"li"},"getMap")," function."),(0,r.kt)("li",{parentName:"ul"},"The equivalent ",(0,r.kt)("inlineCode",{parentName:"li"},"getMap")," function returns an extra property (",(0,r.kt)("inlineCode",{parentName:"li"},"map"),") to the returned map from it's equivalent operation function (ie; ",(0,r.kt)("inlineCode",{parentName:"li"},"add")," returns ",(0,r.kt)("inlineCode",{parentName:"li"},"{ id }")," ,",(0,r.kt)("inlineCode",{parentName:"li"},"getAddMap")," returns ",(0,r.kt)("inlineCode",{parentName:"li"},"{ id, map }"),"). This map contains the update map that should be passed to the firebase ",(0,r.kt)("a",{parentName:"li",href:"https://firebase.google.com/docs/reference/js/database#update"},"update")," function."),(0,r.kt)("li",{parentName:"ul"},"This allows us to utilize the ",(0,r.kt)("a",{parentName:"li",href:"https://firebase.blog/posts/2015/09/introducing-multi-location-updates-and_86"},"multiple location writes")," feature in the firebaseDB."),(0,r.kt)("li",{parentName:"ul"},"All you have to do is preform multiple operations and join the all of the maps and pass the joined map to the firebaseDB ",(0,r.kt)("a",{parentName:"li",href:"https://firebase.google.com/docs/reference/js/database#update"},"update")," function")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Immediate operation"),(0,r.kt)("th",{parentName:"tr",align:null},"Equivalent ",(0,r.kt)("inlineCode",{parentName:"th"},"getMap")," function"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../../api/classes/FrostDelegate#add"},"add")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../../api/classes/FrostDelegate#getAddMap"},"getAddMap"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../../api/classes/FrostDelegate#update"},"update")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../../api/classes/FrostDelegate#getUpdateMap"},"getUpdateMap"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../../api/classes/FrostDelegate#delete"},"delete")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../../api/classes/FrostDelegate#getDeleteMap"},"getDeleteMap"))))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Multiple location write can be very helpful in operating on collections. For example, if you want to delete a list of nodes; then you can achieve that by looping or (using array methods like ",(0,r.kt)("inlineCode",{parentName:"p"},"map"),") on ",(0,r.kt)("inlineCode",{parentName:"p"},"getDeleteMap")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"delete"),", then pass the final update map to ",(0,r.kt)("a",{parentName:"p",href:"https://firebase.google.com/docs/reference/js/database#update"},"update")," firebaseDB function.")),(0,r.kt)("h2",{id:"overcoming-limitations"},"Overcoming Limitations"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Firebase has a small limitation in Multi-Location writes, you can't have an update to a node and another separate update to a child of that node (ie; two updates to the same location with different paths)."),(0,r.kt)("li",{parentName:"ul"},"Frost has implemented a piece of code that overcomes this limitation. ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"(This is specific to the Codegen versions)"))),(0,r.kt)("li",{parentName:"ul"},"In the example below:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Lines 7-20"),": These lines should throw an error if you're using plain firebaseSDK because the final update map will have the path to set the ",(0,r.kt)("inlineCode",{parentName:"li"},"user")," node, And each ",(0,r.kt)("inlineCode",{parentName:"li"},"post")," add will also result in a update path inside that same user node (in order to connect them by setting ID values in the user node.). ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"But because Frost's goal is to simplify dealing with the database as much as possible; these lines won't throw na error")))))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=src/index.ts showLineNumbers",title:"src/index.ts",showLineNumbers:!0},'import { User, Post } from "@frost-orm/frost-web-client"\nimport { FrostApp } from "src/data/frost"\nimport { update } from "firebase/database";\n\nconst user: User = {...}\n\n//highlight-start\nconst { id: userId, map: addUserMap } = (await FrostApp.user.getAddMap(user))\n\n\nconst post_1: Post= {...}\nconst post_2: Post = {...}\n\nconst {id:postId_1, map: addPostMap_1} = await FrostApp.post.getAddMap(post_1,{\'user\':userId})\nconst {id:postId_2, map: addPostMap_2} = await FrostApp.post.getAddMap(post_2,{\'user\':userId})\n\nawait update({\n  ...addUserMap,\n  ...addPostMap_1,\n  ...addPostMap_2,\n})\n//highlight-end\n\n')))}u.isMDXComponent=!0}}]);