"use strict";(self.webpackChunkfrost_web_doc=self.webpackChunkfrost_web_doc||[]).push([[3159],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),f=o,u=d["".concat(c,".").concat(f)]||d[f]||m[f]||a;return n?r.createElement(u,i(i({ref:t},p),{},{components:n})):r.createElement(u,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7074:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={"sidebar-position":3,description:"A guide on using the Frost CLI to generate the code from the schema.",title:"Generate Frost App Implementation"},i=void 0,s={unversionedId:"docs/guides/generate-the-implementation",id:"version-2.0.0/docs/guides/generate-the-implementation",title:"Generate Frost App Implementation",description:"A guide on using the Frost CLI to generate the code from the schema.",source:"@site/versioned_docs/version-2.0.0/docs/guides/generate-the-implementation.mdx",sourceDirName:"docs/guides",slug:"/docs/guides/generate-the-implementation",permalink:"/frost-web-docs/docs/guides/generate-the-implementation",draft:!1,tags:[],version:"2.0.0",frontMatter:{"sidebar-position":3,description:"A guide on using the Frost CLI to generate the code from the schema.",title:"Generate Frost App Implementation"},sidebar:"tutorialSidebar",previous:{title:"Define Frost Schema",permalink:"/frost-web-docs/docs/guides/define-schema"},next:{title:"Database Operations",permalink:"/frost-web-docs/category/database-operations"}},c={},l=[{value:"Location of the schema file",id:"location-of-the-schema-file",level:2},{value:"The <code>generate</code> command",id:"the-generate-command",level:2}],p={toc:l};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"location-of-the-schema-file"},"Location of the schema file"),(0,o.kt)("p",null,"The default name and location for the frost schema file is ",(0,o.kt)("inlineCode",{parentName:"p"},"$PROJECT_DIR/frost/schema.fsl"),",\nbut if the user wants to store the file in a different name or location,\nthen you can specify the  path for the file in ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},(0,o.kt)("inlineCode",{parentName:"em"},"package.json")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json5"},'{\n    ...\n\n    "frost":{\n        "schema":{\n            "path":"<path_to_schema_file>"\n        }\n    }\n    ...\n}\n')),(0,o.kt)("h2",{id:"the-generate-command"},"The ",(0,o.kt)("inlineCode",{parentName:"h2"},"generate")," command"),(0,o.kt)("p",null,"After defining the schema and ensuring that you have installed ",(0,o.kt)("inlineCode",{parentName:"p"},"@frost-orm/frost-web-client")," package,\nthen you can run the following generate command.\nThis will generate all the code required to start using Frost client"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npx frost generate\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The generate command has two aliases ",(0,o.kt)("inlineCode",{parentName:"p"},"gen")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"g"),"\nso you can instead use it as follows"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npx frost g\n# Or\nnpx frost gen\n"))))}m.isMDXComponent=!0}}]);