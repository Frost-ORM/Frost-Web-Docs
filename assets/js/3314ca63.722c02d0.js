"use strict";(self.webpackChunkfrost_web_doc=self.webpackChunkfrost_web_doc||[]).push([[6033],{3380:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>k,frontMatter:()=>c,metadata:()=>h,toc:()=>u});var n=a(7462),s=a(7294),i=a(3905),o=a(814);const r=s.createElement(o.Z,{language:"ts"},'\n@FrostEntity({collectionPath:"/users"})\nclass User extends FrostObject<User>{\n    id?:string\n    name!:string\n    userType!: "Customer" | "Admin"\n    birthday?:string\n    ...\n}\n'),l=(o.Z,s.createElement(o.Z,{language:"ts"},'\nnew User({id:"user1",name:"User One",userType:"Customer"})\n')),d=s.createElement(o.Z,{language:"ts"},"\n@FrostNode({entity:User})\nclass UserApi extends FrostApi<User>{}\n"),c=(o.Z,{sidebar_position:1,description:"Defining A class that represents a node in the firebase db tree"}),p="Create a node",h={unversionedId:"docs/fundamentals/create-a-node",id:"version-1.0.3/docs/fundamentals/create-a-node",title:"Create a node",description:"Defining A class that represents a node in the firebase db tree",source:"@site/versioned_docs/version-1.0.3/docs/fundamentals/create-a-node.mdx",sourceDirName:"docs/fundamentals",slug:"/docs/fundamentals/create-a-node",permalink:"/frost-web-docs/1.0.3/docs/fundamentals/create-a-node",draft:!1,tags:[],version:"1.0.3",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Defining A class that represents a node in the firebase db tree"},sidebar:"tutorialSidebar",previous:{title:"Fundamentals",permalink:"/frost-web-docs/1.0.3/category/fundamentals"},next:{title:"Define Relations",permalink:"/frost-web-docs/1.0.3/docs/fundamentals/define-realtions"}},m={},u=[{value:"Define the data model",id:"define-the-data-model",level:2},{value:"Instantiation",id:"instantiation",level:2},{value:"Available methods",id:"available-methods",level:3},{value:"Define the API",id:"define-the-api",level:2}],f={toc:u};function k(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"create-a-node"},"Create a node"),(0,i.kt)("h2",{id:"define-the-data-model"},"Define the data model"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"To define a Frost Entity (Object), You have to:"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'Create A class with the name of the Entity you desire. In this case it\'s "User"'),(0,i.kt)("li",{parentName:"ul"},"This Class must extend the ",(0,i.kt)("a",{parentName:"li",href:"../../api/classes/FrostObject"},"FrostObject")," class.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../../api/classes/FrostObject"},"FrostObject")," takes a generic parameter of the class itself (",(0,i.kt)("inlineCode",{parentName:"li"},"class A extends FrostObject<A>"),"), this will extract the type for the constructor."))),(0,i.kt)("li",{parentName:"ul"},"Annotate the class with the ",(0,i.kt)("a",{parentName:"li",href:"../../api/decorators/FrostEntity"},"FrostEntity")," decorator.\nPass the options(",(0,i.kt)("a",{parentName:"li",href:"../../api/types/FrostEntityDecoratorOptions"},"FrostEntityDecoratorOptions"),") that you desire to the decorator.\nSo far the only available option is the collectionPath which is the name of the node that will contain all the instances for this entity. In this case its ",(0,i.kt)("inlineCode",{parentName:"li"},"/users/"),(0,i.kt)("admonition",{parentName:"li",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Since you don't have to define a constructor, then Typescript will throw an error because it cannot detect the initialization of the object properties.\nSo you'll have to either use ",(0,i.kt)("inlineCode",{parentName:"p"},"?")," for optional parameters or ",(0,i.kt)("inlineCode",{parentName:"p"},"!")," for non-optional parameters to let Typescript know that they'll be initialized.")))),(0,i.kt)("p",null,"All (FrostObject)s have the id property, you don't have to define. If you want to define it yourself, you might need to add the ",(0,i.kt)("inlineCode",{parentName:"p"},"override")," modifier; depending on the Typescript version and the compile options.\n:::"),(0,i.kt)(s.Fragment,null,r),(0,i.kt)("h2",{id:"instantiation"},"Instantiation"),(0,i.kt)("p",null,"To create an instance from the Entity"),(0,i.kt)(s.Fragment,null,l),(0,i.kt)("h3",{id:"available-methods"},"Available methods"),(0,i.kt)("p",null,"Since the Entity extends FrostObject it inherits a few useful ",(0,i.kt)("a",{parentName:"p",href:"../../api/classes/FrostObject#methods"},"methods")," from it. Please check them out they might be of help to you."),(0,i.kt)("h2",{id:"define-the-api"},"Define the API"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"To define a Frost API, You have to:"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'Create A class with the name you desire. In this case it\'s "UserApi"'),(0,i.kt)("li",{parentName:"ul"},"This Class must extend the ",(0,i.kt)("a",{parentName:"li",href:"../../api/classes/FrostApi"},"FrostApi")," class. and the Entity class must be passed to the generic type."),(0,i.kt)("li",{parentName:"ul"},"Annotate the class with the ",(0,i.kt)("a",{parentName:"li",href:"../../api/decorators/FrostNode"},"FrostNode")," decorator. Pass the Corresponding Entity to the decorator.")),(0,i.kt)(s.Fragment,null,d))}k.isMDXComponent=!0}}]);